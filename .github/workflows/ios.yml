name: iOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  jobs:
    build:
      runs-on: [macos-latest]
      env:
        XC_VERSION: ${{ '13.3' }}
        XC_WORKSPACE: ${{ 'Runner.xcworkspace' }}
        XC_SCHEME: ${{ 'Runner' }}
      steps:
      - name: Select latest Xcode
        run: "sudo xcode-select -s /Applications/Xcode_$XC_VERSION.app"
      - uses: actions/checkout@v2

# jobs:
#   build:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Checkout Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: 'stable'
#       - name: Get Flutter version  
#         run: flutter --version
#       - name: Get packages
#         run: flutter pub get
#       - name: Analyze code
#         run: flutter analyze
#       - name: Unit testing
#         run: flutter test
#       - name: Install the Apple certificate and provisioning profile
#         env:
#           BUILD_CERTIFICATE_BASE64: ${{ secrets.DEVELOPMENT_CERTIFICATE_DATA }}
#           P12_PASSWORD: ${{ secrets.DEVELOPMENT_CERTIFICATE_PASSPHRASE }}
#           BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.DEVELOPMENT_PROFILE }}
#           KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#         run: |
#           # create variables
#           CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#           PP_PATH=$RUNNER_TEMP/flutter_counter.mobileprovision
#           KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

#           # import certificate and provisioning profile from secrets
#           echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
#           echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

#           # create temporary keychain
#           security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#           security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#           security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

#           # import certificate to keychain
#           security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#           security list-keychain -d user -s $KEYCHAIN_PATH

#           # apply provisioning profile
#           mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#           cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
#       - name: Assemble release build
#         run: |
#           flutter build ios integration_test/main_test.dart --release

#           pushd ios
#           xcodebuild -workspace Runner.xcworkspace -allowProvisioningUpdates -scheme Runner -config Flutter/Release.xcconfig -derivedDataPath "../build/ios_integ" -sdk iphoneos build-for-testing
#           popd

#           pushd build/ios_integ/Build/Products
#           zip -r ios_tests.zip Release-iphoneos Runner_iphoneos15.4-arm64.xctestrun
#           popd